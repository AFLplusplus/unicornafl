name: PyPI 📦 Distribution

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { 
              os: ubuntu-latest, 
              arch: x64, 
              python-ver: '3.8', 
              name: 'manylinux2014_x86_64'
            }
          - { 
              os: ubuntu-latest,
              arch: x32,
              python-ver: '3.8',
              name: 'manylinux2014_i686'
            }
          - { 
              os: ubuntu-latest,
              arch: x64,
              python-ver: '3.8',
              name: 'sdist'
            }
          - { 
              os: macos-latest,
              arch: x64,
              python-ver: '3.8',
              name: 'macos_x86_64'
            }
    steps:
    - uses: actions/checkout@v2

    - name: '🛠️ Checkout submodules'
      run: git submodule update --init

    - name: '🛠️ Set up Python'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python-ver }}

    - name: '🛠️ Install dependencies'
      run: |
        pip install setuptools wheel auditwheel

    - name: '🚧 Build distribution'
      env:
        UCAFL_NO_LOG: '1'
      shell: bash 
      run: |
        if [ ${{ matrix.config.name }} == 'manylinux2014_i686' ]; then
              docker run --rm -v `pwd`/:/work dockcross/manylinux2014-x86 > ./dockcross
              chmod +x ./dockcross
              ./dockcross bindings/python/build_wheels.sh
        elif [ ${{ matrix.config.name }} == 'manylinux2014_x86_64' ]; then
              docker run --rm -v `pwd`/:/work dockcross/manylinux2014-x64 > ./dockcross
              chmod +x ./dockcross
              ./dockcross bindings/python/build_wheels.sh
        elif [ ${{ matrix.config.name }} == 'sdist' ]; then
              cd bindings/python && python setup.py sdist
        else
              cd bindings/python && python setup.py bdist_wheel
        fi

    - name: '📤 Upload artifact'
      uses: actions/upload-artifact@v2
      with:
         path: ${{ github.workspace }}/bindings/python/dist/*

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: '📦 Publish distribution to PyPI'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_pass }}
